"0","# Start over again with the tall dataset, before the first aggregation.  For this aggregation, group by user and measure again, but this time convert the Likert responses to numerical values -- 1 for Very unimportant, 4 for Very important, -99 for skipped.  Do for both importance and estimability."
"0","measures_by_user_quad <- measures_by_user_imp[,-c(2,6)]"
"0","measures_by_user_quad$coded_answer <- ifelse(measures_by_user_quad$compiled_answer == ""Unfamiliar"", 0, ifelse(measures_by_user_quad$compiled_answer == ""Skipped"", -99, ifelse(measures_by_user_quad$compiled_answer == ""Very low"", 1, ifelse(measures_by_user_quad$compiled_answer == ""Somewhat low"", 2, ifelse(measures_by_user_quad$compiled_answer == ""Somewhat high"", 3, ifelse(measures_by_user_quad$compiled_answer == ""Very high"", 4, ""Error""))))))"
"0","                                             "
"0","# Note: est_score and imp_score fairly highly correlated"
"0","#cor(measures_by_user_quad$imp_score,measures_by_user_quad$est_score)"
"0","#####   result: 0.7930693"
"0","# Aggregate to the individual measures by averaging numerical Likert responses, filtering out measures marked as unfamiliar or measures that had been skipped.  Keep track of number of users responding for each measure."
"0","# output measures_by_user_quad for additional stats; necessary for logit?"
"0","#write.csv(measures_by_user_quad, file = ""measures_by_user_quad.csv"")"
"0","measures_quad <- measures_by_user_quad %>% filter(coded_answer > 0) %>% group_by(name, subgroup) %>% summarise(avg_score=mean(as.numeric(coded_answer))) %>% collect"
"0","# Add the level of analysis for each measure."
"0","measures_quad$level <- ifelse(measures_quad$name %in% c(""EigenvectorCentrality"",""ClosenessCentrality"",""NodeBC"",""NodeDegree"",""Loops"",""LinkBC""),""Element"",ifelse(measures_quad$name %in% c(""AvgShortestPath"",""AvgPathLength"",""Diameter"",""ClusteringCoeff"",""Density"",""NumLinks"",""AvgDegree"",""NumNodes""),""Graph"",ifelse(measures_quad$name %in% c(""Modularity"",""ComponentSize"",""NumComponents""),""Cluster"",""Other"")))"
"0","# Factorize and order the level column."
"0","measures_quad$level <- factor(measures_quad$level,levels=c(""Element"",""Cluster"",""Graph""),ordered=TRUE)"
"0","measures_quad_spread <- spread(measures_quad, subgroup, avg_score)"
